package com.bikepoint.service;

import javax.transaction.Transactional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bikepoint.dao.CustomerDao;
import com.bikepoint.dao.VehicleDao;
import com.bikepoint.dto.CustomerDto;
import com.bikepoint.dto.ProblemDto;
import com.bikepoint.entites.Customer;
import com.bikepoint.entites.Problem;
import com.bikepoint.exception.ResourceNotFoundException;
@Service
@Transactional
public class CustomerServiceImpl implements CustomerService {
	
	@Autowired
	private CustomerDao custDao;
	
	@Autowired
	private VehicleDao vehicleDao;
	
	@Autowired
	private ModelMapper mapper;

	@Override
	public CustomerDto addCustomer(CustomerDto customer) {
		Customer cust= mapper.map(customer, Customer.class);
		return mapper.map(custDao.save(cust), CustomerDto.class);
	}

	@Override
	public CustomerDto validateCustomer(String email, String password) {
		Customer customer =custDao.findCustomerByEmail(email);
		if (customer==null) {
			throw new ResourceNotFoundException("Invalid Email!");
		}
		if(password.equals(customer.getPassword())) {
			return mapper.map(customer, CustomerDto.class);
		}
		return null;
	}

	@Override
	public ProblemDto addVehicle(long id, ProblemDto vehicle) throws ResourceNotFoundException {
		Problem veh= mapper.map(vehicle, Problem.class);
		Customer cust= custDao.findById(id).orElseThrow(()->new ResourceNotFoundException("Server error"));
		cust.addVehicle(veh);
		Problem savedVehicle=vehicleDao.save(veh);
		return mapper.map(savedVehicle, ProblemDto.class);
	}

	@Override
	public String forgotPassword(String email, String newPassword) throws ResourceNotFoundException {
		Customer customer=custDao.findCustomerByEmail(email);
		if (customer != null) {
			customer.setPassword(newPassword);
			return "Password changed successfully!";
		} else {
			throw new ResourceNotFoundException("Failed to change password.");
		}
	}
	

}
