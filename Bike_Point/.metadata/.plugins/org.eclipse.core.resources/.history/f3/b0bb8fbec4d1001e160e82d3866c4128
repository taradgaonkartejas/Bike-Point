package com.bikepoint.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.DisabledException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bikepoint.dto.LoginRequest;
import com.bikepoint.jwtsequrity.JwtAuthResponce;
import com.bikepoint.jwtsequrity.JwtTokenHelper;

@RestController
@RequestMapping("/auth")
public class AuthController {
	
	@Autowired
	private JwtTokenHelper jwtTokenHelper;
	
	@Autowired
	private UserDetailsService userDetailsService;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@PostMapping("/login")
	public ResponseEntity<?> createToken(@RequestBody LoginRequest request){
		authenticate(request.getEmail(), request.getPassword());
		
		UserDetails userDetails= userDetailsService.loadUserByUsername(request.getEmail());
		
		String token=jwtTokenHelper.generateToken(userDetails);
		
		JwtAuthResponce response=new JwtAuthResponce();
		response.setToken(token);
		return new ResponseEntity<JwtAuthResponce>(response,HttpStatus.OK);
	}

	private void authenticate(String email, String password) {
		
		UsernamePasswordAuthenticationToken authenticationToken=new UsernamePasswordAuthenticationToken(email, password);
		try {
			authenticationManager.authenticate(authenticationToken);
		} catch (DisabledException e) {
			throw new DisabledException("User is disabled!");
		}
	}

}
